name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort

    - name: Check formatting
      run: |
        black --check .
        isort --check-only .
        flake8 .

  test:
    runs-on: ubuntu-latest
    needs: lint
    
    services:
      qdrant:
        image: qdrant/qdrant
        ports:
          - 6333:6333
        options: >-
          --health-cmd "curl -f http://localhost:6333/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run unit tests
      run: |
        pytest tests/ --cov=./ --cov-report=xml -v
        
    - name: Run integration tests
      if: github.event_name == 'push'
      env:
        AIRWEAVE_API_URL: ${{ secrets.AIRWEAVE_API_URL || '' }}
        AIRWEAVE_API_KEY: ${{ secrets.AIRWEAVE_API_KEY || '' }}
        SAP_BASE_URL: ${{ secrets.SAP_BASE_URL || '' }}
        SAP_CLIENT_ID: ${{ secrets.SAP_CLIENT_ID || '' }}
        SAP_CLIENT_SECRET: ${{ secrets.SAP_CLIENT_SECRET || '' }}
      run: |
        if [ -n "$AIRWEAVE_API_KEY" ] && [ -n "$AIRWEAVE_API_URL" ] && [ -n "$SAP_BASE_URL" ] && [ -n "$SAP_CLIENT_ID" ] && [ -n "$SAP_CLIENT_SECRET" ]; then
          pytest tests/ --runintegration -v
        else
          echo "Skipping integration tests - missing required secrets"
        fi
    - name: Run Airweave smoke test
      env:
        AIRWEAVE_API_URL: ${{ secrets.AIRWEAVE_API_URL || '' }}
        AIRWEAVE_API_KEY: ${{ secrets.AIRWEAVE_API_KEY || '' }}
      run: |
        if [ -n "$AIRWEAVE_API_KEY" ] && [ -n "$AIRWEAVE_API_URL" ]; then
        python -c "
        from airweave import Client
        import os
        
        # Initialize client
        client = Client(
            api_url=os.getenv('AIRWEAVE_API_URL'),
            api_key=os.getenv('AIRWEAVE_API_KEY')
        )
        
        # Create test collection
        client.create_collection('test')
        
        # Add test document
        client.add_document(
            collection='test',
            content='Hello World',
            metadata={'type': 'test'}
        )
        
        # Search and verify
        results = client.search(
            collection='test',
            query='hello world',
            limit=1
        )
        assert len(results) == 1
        assert 'Hello World' in results[0].content
        
        # Cleanup
        client.delete_collection('test')
        "
        else
          echo "Skipping smoke test - missing Airweave credentials"
        fi
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

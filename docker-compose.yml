version: '3.8'

services:
  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:10.0.3
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
  api:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    environment:
      # Gmail credentials
      - GMAIL_CLIENT_ID=${GMAIL_CLIENT_ID}
      - GMAIL_CLIENT_SECRET=${GMAIL_CLIENT_SECRET}
      - GMAIL_REFRESH_TOKEN=${GMAIL_REFRESH_TOKEN}
      - GMAIL_USER_EMAIL=${GMAIL_USER_EMAIL}
      
      # Google Drive credentials
      - GDRIVE_CLIENT_ID=${GDRIVE_CLIENT_ID}
      - GDRIVE_CLIENT_SECRET=${GDRIVE_CLIENT_SECRET}
      - GDRIVE_REFRESH_TOKEN=${GDRIVE_REFRESH_TOKEN}
      - GDRIVE_FOLDER_ID=${GDRIVE_FOLDER_ID}
      
      # Vector store configuration
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=${QDRANT_COLLECTION:-supplier_docs}
      
      # Database configuration
      - DB_USER=docker
      - DB_PASS=docker
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=airweave
      
      # Redis configuration
      - REDIS_URL=redis://redis:6379
      
      # Airweave configuration
      - AIRWEAVE_API_URL=${AIRWEAVE_API_URL}
      - AIRWEAVE_API_KEY=${AIRWEAVE_API_KEY}
      
      # OpenAI configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Processing configuration
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
    depends_on:
      - qdrant
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  airbyte:
    image: airbyte/airbyte-bootloader:latest
    environment:
      - AIRBYTE_VERSION=0.50.33
      - DATABASE_USER=docker
      - DATABASE_PASSWORD=docker
      - DATABASE_DB=airbyte
      - DATABASE_URL=jdbc:postgresql://db:5432/airbyte
      - CONFIG_DATABASE_USER=docker
      - CONFIG_DATABASE_PASSWORD=docker
      - CONFIG_DATABASE_URL=jdbc:postgresql://db:5432/airbyte
      - WORKSPACE_ROOT=/workspace
      - WORKSPACE_DOCKER_MOUNT=workspace
      - LOCAL_ROOT=/tmp/airbyte_local
      - LOCAL_DOCKER_MOUNT=/tmp/airbyte_local
      - TRACKING_STRATEGY=logging
      - AIRBYTE_ROLE=dev
      - TEMPORAL_HOST=temporal:7233
      - WORKER_ENVIRONMENT=docker
      - WEBAPP_URL=http://localhost:8000/
      - CONNECTOR_BUILDER_API_URL=http://localhost:8080
    volumes:
      - ./landing:/landing
      - ./docker/airbyte/config:/config
    depends_on:
      - db
      - temporal

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=airweave
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker -d airweave"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  temporal:
    image: temporalio/auto-setup:1.7.0
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=docker
      - POSTGRES_PWD=docker
      - POSTGRES_SEEDS=db
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
    volumes:
      - ./docker/temporal/dynamicconfig:/etc/temporal/config/dynamicconfig
    depends_on:
      - db
      
  dagster:
    build:
      context: .
      dockerfile: Dockerfile
    command: dagster dev -h 0.0.0.0 -p 3002
    ports:
      - "3002:3002"
    volumes:
      - .:/app
    environment:
      # Gmail credentials
      - GMAIL_CLIENT_ID=${GMAIL_CLIENT_ID}
      - GMAIL_CLIENT_SECRET=${GMAIL_CLIENT_SECRET}
      - GMAIL_REFRESH_TOKEN=${GMAIL_REFRESH_TOKEN}
      - GMAIL_USER_EMAIL=${GMAIL_USER_EMAIL}
      
      # Google Drive credentials
      - GDRIVE_CLIENT_ID=${GDRIVE_CLIENT_ID}
      - GDRIVE_CLIENT_SECRET=${GDRIVE_CLIENT_SECRET}
      - GDRIVE_REFRESH_TOKEN=${GDRIVE_REFRESH_TOKEN}
      - GDRIVE_FOLDER_ID=${GDRIVE_FOLDER_ID}
      
      # Database configuration
      - DB_USER=docker
      - DB_PASS=docker
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=airweave
      
      # Airweave configuration
      - AIRWEAVE_API_URL=${AIRWEAVE_API_URL}
      - AIRWEAVE_API_KEY=${AIRWEAVE_API_KEY}
      
      # OpenAI configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db
      - redis

volumes:
  qdrant_data:
  postgres_data:
  redis_data:
